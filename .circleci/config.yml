version: 2
jobs:
  build:
    working_directory: ~/renalware-heroic
    docker:
      - image: ccircleci/ruby:2.6.3-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: renalware
          RAILS_ENV: test
      - image: circleci/postgres:11.2-alpine-ram
      - image: redis:3.2.7

    parallelism: 1

    steps:
      - checkout

      - run: mkdir -p ./tmp/test-artifacts
      - run: mkdir -p ./coverage

      - restore_cache:
          keys:
            - renalware-heroic-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - renalware-heroic-

      - run: bundle install --path vendor/bundle --jobs=3 --retry=3

      - save_cache:
          paths:
            - ./vendor/bundle
          key: renalware-heroic-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install postgresql-client 11
          command: |
            wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
            RELEASE=$(lsb_release -cs)
            echo "deb http://apt.postgresql.org/pub/repos/apt/ ${RELEASE}"-pgdg main | sudo tee  /etc/apt/sources.list.d/pgdg.list
            sudo apt install postgresql-client-11

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # Database set-up
      - run: cp ./spec/dummy/config/database.circle.yml ./spec/dummy/config/database.yml
      - run: bundle exec rake app:db:create
      - run: bundle exec rake app:db:structure:load

      # Check gems for security vulnerabilities in gems
      - run: bundle exec bundle-audit update && bundle exec bundle-audit check

      - run:
          name: RSpec tests
          command: |
            # notify Code Climate of a pending test report using `before-build`
            mkdir /tmp/test-results
            ./cc-test-reporter before-build
            bundle exec rspec --format progress \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

      # - run:
      #     name: Code Climate Test Coverage
      #     command: |
      #       ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      # - deploy:
      #     command: |
      #       ./cc-test-reporter sum-coverage --output - --parts $CIRCLE_NODE_TOTAL coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -
